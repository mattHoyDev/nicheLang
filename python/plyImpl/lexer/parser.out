Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMMA
    DECREMENT
    DIVEQ
    FLOAT
    GREATER
    GREQUALS
    INCREMENT
    INTEGER
    LBRACKET
    LCURLY
    LEQUALS
    LESS
    MINUSEQ
    OR
    PERIOD
    PLUSEQ
    RBRACKET
    RCURLY
    STRING
    TIMESEQ

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> expression MODULO expression
Rule 8     expression -> expression EXPON expression
Rule 9     expression -> expression NOTEQUALS expression
Rule 10    expression -> expression EQUIV expression
Rule 11    expression -> MINUS expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> NUMBER
Rule 14    expression -> NAME
Rule 15    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
COMMA                : 
DECREMENT            : 
DIVEQ                : 
DIVIDE               : 6
EQUALS               : 1
EQUIV                : 10
EXPON                : 8
FLOAT                : 
GREATER              : 
GREQUALS             : 
INCREMENT            : 
INTEGER              : 
LBRACKET             : 
LCURLY               : 
LEQUALS              : 
LESS                 : 
LPAREN               : 12
MINUS                : 4 11
MINUSEQ              : 
MODULO               : 7
NAME                 : 1 14
NOTEQUALS            : 9
NUMBER               : 13
OR                   : 
PERIOD               : 
PLUS                 : 3
PLUSEQ               : 
RBRACKET             : 
RCURLY               : 
RPAREN               : 12
STRING               : 
TIMES                : 5
TIMESEQ              : 
error                : 

Nonterminals, with rules where they appear

empty                : 
expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    NAME            shift and go to state 2
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression
    (14) expression -> NAME .

    EQUALS          shift and go to state 7
    PLUS            reduce using rule 14 (expression -> NAME .)
    MINUS           reduce using rule 14 (expression -> NAME .)
    TIMES           reduce using rule 14 (expression -> NAME .)
    DIVIDE          reduce using rule 14 (expression -> NAME .)
    MODULO          reduce using rule 14 (expression -> NAME .)
    EXPON           reduce using rule 14 (expression -> NAME .)
    NOTEQUALS       reduce using rule 14 (expression -> NAME .)
    EQUIV           reduce using rule 14 (expression -> NAME .)
    $end            reduce using rule 14 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15


state 4

    (11) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 16

state 5

    (12) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 18

state 6

    (13) expression -> NUMBER .

    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    MODULO          reduce using rule 13 (expression -> NUMBER .)
    EXPON           reduce using rule 13 (expression -> NUMBER .)
    NOTEQUALS       reduce using rule 13 (expression -> NUMBER .)
    EQUIV           reduce using rule 13 (expression -> NUMBER .)
    $end            reduce using rule 13 (expression -> NUMBER .)
    RPAREN          reduce using rule 13 (expression -> NUMBER .)


state 7

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 19

state 8

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 20

state 9

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 21

state 10

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 22

state 11

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 23

state 12

    (7) expression -> expression MODULO . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 24

state 13

    (8) expression -> expression EXPON . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 25

state 14

    (9) expression -> expression NOTEQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 26

state 15

    (10) expression -> expression EQUIV . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression MODULO expression
    (8) expression -> . expression EXPON expression
    (9) expression -> . expression NOTEQUALS expression
    (10) expression -> . expression EQUIV expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 17

    expression                     shift and go to state 27

state 16

    (11) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    PLUS            reduce using rule 11 (expression -> MINUS expression .)
    MINUS           reduce using rule 11 (expression -> MINUS expression .)
    TIMES           reduce using rule 11 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 11 (expression -> MINUS expression .)
    MODULO          reduce using rule 11 (expression -> MINUS expression .)
    EXPON           reduce using rule 11 (expression -> MINUS expression .)
    NOTEQUALS       reduce using rule 11 (expression -> MINUS expression .)
    EQUIV           reduce using rule 11 (expression -> MINUS expression .)
    $end            reduce using rule 11 (expression -> MINUS expression .)
    RPAREN          reduce using rule 11 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MODULO          [ shift and go to state 12 ]
  ! EXPON           [ shift and go to state 13 ]
  ! NOTEQUALS       [ shift and go to state 14 ]
  ! EQUIV           [ shift and go to state 15 ]


state 17

    (14) expression -> NAME .

    PLUS            reduce using rule 14 (expression -> NAME .)
    MINUS           reduce using rule 14 (expression -> NAME .)
    TIMES           reduce using rule 14 (expression -> NAME .)
    DIVIDE          reduce using rule 14 (expression -> NAME .)
    MODULO          reduce using rule 14 (expression -> NAME .)
    EXPON           reduce using rule 14 (expression -> NAME .)
    NOTEQUALS       reduce using rule 14 (expression -> NAME .)
    EQUIV           reduce using rule 14 (expression -> NAME .)
    $end            reduce using rule 14 (expression -> NAME .)
    RPAREN          reduce using rule 14 (expression -> NAME .)


state 18

    (12) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15


state 19

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15


state 20

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 3 (expression -> expression PLUS expression .)
    EXPON           reduce using rule 3 (expression -> expression PLUS expression .)
    NOTEQUALS       reduce using rule 3 (expression -> expression PLUS expression .)
    EQUIV           reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! MODULO          [ shift and go to state 12 ]
  ! EXPON           [ shift and go to state 13 ]
  ! NOTEQUALS       [ shift and go to state 14 ]
  ! EQUIV           [ shift and go to state 15 ]


state 21

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 4 (expression -> expression MINUS expression .)
    EXPON           reduce using rule 4 (expression -> expression MINUS expression .)
    NOTEQUALS       reduce using rule 4 (expression -> expression MINUS expression .)
    EQUIV           reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! MODULO          [ shift and go to state 12 ]
  ! EXPON           [ shift and go to state 13 ]
  ! NOTEQUALS       [ shift and go to state 14 ]
  ! EQUIV           [ shift and go to state 15 ]


state 22

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 5 (expression -> expression TIMES expression .)
    EXPON           reduce using rule 5 (expression -> expression TIMES expression .)
    NOTEQUALS       reduce using rule 5 (expression -> expression TIMES expression .)
    EQUIV           reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MODULO          [ shift and go to state 12 ]
  ! EXPON           [ shift and go to state 13 ]
  ! NOTEQUALS       [ shift and go to state 14 ]
  ! EQUIV           [ shift and go to state 15 ]


state 23

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 6 (expression -> expression DIVIDE expression .)
    EXPON           reduce using rule 6 (expression -> expression DIVIDE expression .)
    NOTEQUALS       reduce using rule 6 (expression -> expression DIVIDE expression .)
    EQUIV           reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MODULO          [ shift and go to state 12 ]
  ! EXPON           [ shift and go to state 13 ]
  ! NOTEQUALS       [ shift and go to state 14 ]
  ! EQUIV           [ shift and go to state 15 ]


state 24

    (7) expression -> expression MODULO expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPON resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUIV resolved as shift
    $end            reduce using rule 7 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 7 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15

  ! PLUS            [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! EXPON           [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! NOTEQUALS       [ reduce using rule 7 (expression -> expression MODULO expression .) ]
  ! EQUIV           [ reduce using rule 7 (expression -> expression MODULO expression .) ]


state 25

    (8) expression -> expression EXPON expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPON resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUIV resolved as shift
    $end            reduce using rule 8 (expression -> expression EXPON expression .)
    RPAREN          reduce using rule 8 (expression -> expression EXPON expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15

  ! PLUS            [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! MODULO          [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! EXPON           [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! NOTEQUALS       [ reduce using rule 8 (expression -> expression EXPON expression .) ]
  ! EQUIV           [ reduce using rule 8 (expression -> expression EXPON expression .) ]


state 26

    (9) expression -> expression NOTEQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPON resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUIV resolved as shift
    $end            reduce using rule 9 (expression -> expression NOTEQUALS expression .)
    RPAREN          reduce using rule 9 (expression -> expression NOTEQUALS expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15

  ! PLUS            [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! MODULO          [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! EXPON           [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]
  ! EQUIV           [ reduce using rule 9 (expression -> expression NOTEQUALS expression .) ]


state 27

    (10) expression -> expression EQUIV expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . MODULO expression
    (8) expression -> expression . EXPON expression
    (9) expression -> expression . NOTEQUALS expression
    (10) expression -> expression . EQUIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPON resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUIV resolved as shift
    $end            reduce using rule 10 (expression -> expression EQUIV expression .)
    RPAREN          reduce using rule 10 (expression -> expression EQUIV expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    MODULO          shift and go to state 12
    EXPON           shift and go to state 13
    NOTEQUALS       shift and go to state 14
    EQUIV           shift and go to state 15

  ! PLUS            [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! MODULO          [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! EXPON           [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! NOTEQUALS       [ reduce using rule 10 (expression -> expression EQUIV expression .) ]
  ! EQUIV           [ reduce using rule 10 (expression -> expression EQUIV expression .) ]


state 28

    (12) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    EXPON           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    EQUIV           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 24 resolved as shift
WARNING: shift/reduce conflict for EXPON in state 24 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 24 resolved as shift
WARNING: shift/reduce conflict for EQUIV in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 25 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 25 resolved as shift
WARNING: shift/reduce conflict for EXPON in state 25 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 25 resolved as shift
WARNING: shift/reduce conflict for EQUIV in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 26 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 26 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 26 resolved as shift
WARNING: shift/reduce conflict for EXPON in state 26 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 26 resolved as shift
WARNING: shift/reduce conflict for EQUIV in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 27 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 27 resolved as shift
WARNING: shift/reduce conflict for EXPON in state 27 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 27 resolved as shift
WARNING: shift/reduce conflict for EQUIV in state 27 resolved as shift
